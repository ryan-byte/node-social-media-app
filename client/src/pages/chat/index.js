import "../../assets/styles/chat.css"

import io from "socket.io-client";
import {useEffect, useState} from "react";

import ChatUI from "./chatUI";
import ErrorOutput from "../../components/output/ErrorOutput";

export default function Chat(){
    const [socket,setSocket] = useState(undefined);
    const [error,setError] = useState(undefined);
    

    /**
     * //join different room if the socket already open (to avoid disconnecting and connecting to another socket)
     * @param {Object} targetUserId 
     */
    function changeRoom(targetUserId){
        if (socket){
            socket.emit("changeRoom",targetUserId)
        }
    }

    useEffect(()=>{
        //create new socket
        const newSocket = io(`?targetUserId=6392249e96dab8f6d1d0446a`);
        setSocket(newSocket);

        newSocket.on("connect",()=>{
            console.log("user connected");
        })
        newSocket.on("disconnect",()=>{
            console.log("user disconnected");
        })
        //handle errors generated by a refused connection
        newSocket.on("connect_error", (err) => {
            if (err.data){
                //show an error if there is something wrong with the cookie credentials
                setError(err.message + ": " + err.data.details);
            }else{
                setError(err.message);
            }
        });
        newSocket.on("Error",(err)=>{
            setError(err);
        })
        return ()=>{
            newSocket.off("connect");
            newSocket.off("disconnect");
            newSocket.off("connect_error");
            newSocket.off("Error");
            newSocket.close();
        }
    }, [setSocket]);

    return (
        <div>
            {error && <ErrorOutput message={error}/>}
            <ChatUI changeRoom={changeRoom}/>
        </div>
    )
}